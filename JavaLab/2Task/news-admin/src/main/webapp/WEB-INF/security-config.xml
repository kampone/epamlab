<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
 http://www.springframework.org/schema/security  
 http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
		<access-denied-handler error-page="/403page" />
		<intercept-url pattern="/news/**" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/tags/**" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/authors/**" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/edit_news/**" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/login"
			access="hasAnyRole('ROLE_ANONYMOUS','ROLE_USER')" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<form-login login-page="/login" username-parameter="username"
			password-parameter="password" default-target-url="/adminStartPage"
			authentication-failure-url="/login?authfailed" />
		<logout logout-success-url="/login" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT login AS username,password AS password, 1 as enable FROM users WHERE login=?"
				authorities-by-username-query="SELECT users.login AS username,roles.role_name AS authority FROM users JOIN roles ON users.user_id = roles.user_id WHERE login =? " />
			<password-encoder hash="md5" />
		</authentication-provider>

	</authentication-manager>

</beans:beans>